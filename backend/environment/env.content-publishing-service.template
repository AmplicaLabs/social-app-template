# Copy this file to "<project_root>/.env.content-publishing-service", and then tweak values for local development
# Values in this file will override the same-named environnent variables in `.env.common.docker` for the content-publishing-service

# URL to IPFS endpoint
# IPFS_ENDPOINT="https://ipfs.infura.io:5001"
IPFS_ENDPOINT="http://kubo_ipfs:5001"

# If using Infura, put Project ID here, or leave blank for Kubo RPC
# IPFS_BASIC_AUTH_USER=

# If using Infura, put auth token here, or leave blank for Kubo RPC
# IPFS_BASIC_AUTH_SECRET=

# IPFS gateway URL. '[CID]' is a token that will be replaced with an actual content ID
IPFS_GATEWAY_URL="https://ipfs.io/ipfs/[CID]"
# IPFS_GATEWAY_URL="http://kubo_ipfs:8080/ipfs/[CID]"

CAPACITY_LIMIT='{"type":"percentage", "value":80}'

# Environment for mapping announcement type to schema ID (use 'dev' for e2e tests)
# Possible values: dev, rococo, testnet, mainnet
CHAIN_ENVIRONMENT=dev

# Max file size allowed for asset upload
FILE_UPLOAD_MAX_SIZE_IN_BYTES=2000000000

# Number of seconds to keep completed asset entrie in the cache
# before expiring them
ASSET_EXPIRATION_INTERVAL_SECONDS=300

# Number of seconds between content publishing batches. This is so that
# the service waits a reasonable amount of time for additional content to publishing
# before submitting a batch--it represents a trade-off between maximum batch fullness
# and minimal wait time for published content.
BATCH_INTERVAL_SECONDS=12

# Maximum number of items that can be submitted in a single batch
BATCH_MAX_COUNT=1000

# Base delay in seconds used for exponential backoff while waiting for
# uploaded assets to be verified available before publishing a content notice.
ASSET_UPLOAD_VERIFICATION_DELAY_SECONDS=5
